name: E2e tests with Docker Compose

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        run: |
          cp .env.defaults .env

          # Add a newline to ensure clean append
          echo "" >> .env
          
          # Add sensitive values
          echo "ELASTIC_ADMIN_PASSWORD=${{ secrets.ELASTIC_ADMIN_PASSWORD || 'changeme' }}" >> .env

      - name: Run setup and prepare environment
        run: |
          docker compose up -d elasticsearch proxy backend

      - name: Wait for proxy to be ready
        run: |
          echo "Waiting for proxy container to be ready..."
          # First check if container is running
          for i in {1..12}; do
            if docker compose ps proxy | grep -q "Up"; then
              echo "✅ Proxy container is running"
              break
            fi
            
            if [ $i -eq 12 ]; then
              echo "❌ Proxy container failed to start"
              docker compose ps
              docker compose logs proxy
              exit 1
            fi
            
            echo "Waiting for proxy... (attempt $i/12)"
            sleep 5
          done

      - name: Check services through proxy
        run: |
          # Wait for elastic health endpoint
          for i in {1..12}; do
            echo "Checking backend via proxy (attempt $i/12)..."
            HEALTH=$(docker compose exec -T proxy curl -s http://backend:8000/elastic-health || echo "failed")
            echo "Elastic health: $HEALTH"
            
            if echo "$HEALTH" | grep -q "healthy" || echo "$HEALTH" | grep -q "status"; then
              echo "✅ Elastic is responding"
              break
            fi
            
            if [ $i -eq 12 ]; then
              echo "❌ Elastic is not responding properly"
              docker compose logs backend
              exit 1
            fi
            
            sleep 5
          done
          
          # Initialize Elasticsearch via backend
          RESPONSE=$(docker compose exec -T proxy curl -s http://backend:8000/elastic-reset || echo "failed")

      - name: Run E2E tests
        run: docker compose up e2e --exit-code-from e2e
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1

      - name: Save test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./e2e/test-results/
          retention-days: 7